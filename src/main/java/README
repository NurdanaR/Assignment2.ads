# Проект: Реализация структур данных

Этот проект включает реализацию базовых структур данных на Java: MyArrayList, MyStack, MyQueue, MyLinkedList, MyMinHeap. Каждая структура данных реализует основные операции, такие как добавление, удаление элементов и проверка состояния (пустая или нет).

## Описание классов

### 1. MyArrayList
MyArrayList реализует динамический массив, поддерживающий основные операции для работы с коллекцией.

Методы:
- add(T element) — добавление элемента в конец списка.
- add(T element, int index) — добавление элемента по индексу.
- get(int index) — получение элемента по индексу.
- remove(int index) — удаление элемента по индексу.
- remove(T element) — удаление первого вхождения элемента.
- size() — возвращает количество элементов в списке.
- isEmpty() — проверяет, пуст ли список.
- clear() — очищает список.
- contains(T element) — проверяет, содержится ли элемент в списке.

### 2. MyStack
MyStack реализует структуру данных "Стек", который работает по принципу LIFO (Last In, First Out).

Методы:
- push(T element) — добавление элемента в стек.
- pop() — удаление элемента с вершины стека.
- peek() — получение элемента с вершины стека без его удаления.
- isEmpty() — проверяет, пуст ли стек.

### 3. MyQueue
MyQueue реализует структуру данных "Очередь", работающую по принципу FIFO (First In, First Out).

Методы:
- enqueue(T element) — добавление элемента в очередь.
- dequeue() — удаление элемента из начала очереди.
- peek() — получение элемента на передней позиции без удаления.
- isEmpty() — проверяет, пуста ли очередь.

### 4. MyLinkedList
MyLinkedList реализует двусвязный список, который поддерживает добавление, удаление и поиск элементов.

Методы:
- add(T element) — добавление элемента в конец списка.
- add(int index, T element) — добавление элемента по индексу.
- get(int index) — получение элемента по индексу.
- remove(int index) — удаление элемента по индексу.
- remove(T element) — удаление первого вхождения элемента.
- size() — возвращает количество элементов в списке.
- isEmpty() — проверяет, пуст ли список.
- clear() — очищает список.
- contains(T element) — проверяет, содержится ли элемент в списке.

### 5. MyMinHeap
MyMinHeap реализует структуру данных "Мин-кучу", где минимальный элемент всегда находится на вершине. Это реализовано с использованием массива, с операциями подъема и спуска элементов для поддержания свойств кучи.

Методы:
- add(T element) — добавление элемента в кучу.
- poll() — извлечение минимального элемента из кучи.
- peek() — получение минимального элемента без его удаления.
- isEmpty() — проверяет, пуста ли куча.
- size() — возвращает количество элементов в куче.

## Пример использования

### Пример для MyArrayList:

```java
MyArrayList<String> list = new MyArrayList<>();
list.add("Hello");
list.add("World");
System.out.println(list.get(0)); // Выведет: Hello
list.remove("Hello");
System.out.println(list.size()); // Выведет: 1
